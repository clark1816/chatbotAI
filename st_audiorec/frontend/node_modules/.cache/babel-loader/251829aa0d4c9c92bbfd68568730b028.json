{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ReadableInterop } from '../io/interfaces';\n/** @ignore */\n\nconst [BigIntCtor, BigIntAvailable] = (() => {\n  const BigIntUnavailableError = () => {\n    throw new Error('BigInt is not available in this environment');\n  };\n\n  function BigIntUnavailable() {\n    throw BigIntUnavailableError();\n  }\n\n  BigIntUnavailable.asIntN = () => {\n    throw BigIntUnavailableError();\n  };\n\n  BigIntUnavailable.asUintN = () => {\n    throw BigIntUnavailableError();\n  };\n\n  return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\n/** @ignore */\n\n\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n  const BigInt64ArrayUnavailableError = () => {\n    throw new Error('BigInt64Array is not available in this environment');\n  };\n\n  class BigInt64ArrayUnavailable {\n    static get BYTES_PER_ELEMENT() {\n      return 8;\n    }\n\n    static of() {\n      throw BigInt64ArrayUnavailableError();\n    }\n\n    static from() {\n      throw BigInt64ArrayUnavailableError();\n    }\n\n    constructor() {\n      throw BigInt64ArrayUnavailableError();\n    }\n\n  }\n\n  return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\n/** @ignore */\n\n\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n  const BigUint64ArrayUnavailableError = () => {\n    throw new Error('BigUint64Array is not available in this environment');\n  };\n\n  class BigUint64ArrayUnavailable {\n    static get BYTES_PER_ELEMENT() {\n      return 8;\n    }\n\n    static of() {\n      throw BigUint64ArrayUnavailableError();\n    }\n\n    static from() {\n      throw BigUint64ArrayUnavailableError();\n    }\n\n    constructor() {\n      throw BigUint64ArrayUnavailableError();\n    }\n\n  }\n\n  return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n/** @ignore */\n\nconst isNumber = x => typeof x === 'number';\n/** @ignore */\n\n\nconst isBoolean = x => typeof x === 'boolean';\n/** @ignore */\n\n\nconst isFunction = x => typeof x === 'function';\n/** @ignore */\n\n\nexport const isObject = x => x != null && Object(x) === x;\n/** @ignore */\n\nexport const isPromise = x => {\n  return isObject(x) && isFunction(x.then);\n};\n/** @ignore */\n\nexport const isObservable = x => {\n  return isObject(x) && isFunction(x.subscribe);\n};\n/** @ignore */\n\nexport const isIterable = x => {\n  return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n/** @ignore */\n\nexport const isAsyncIterable = x => {\n  return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n/** @ignore */\n\nexport const isArrowJSON = x => {\n  return isObject(x) && isObject(x['schema']);\n};\n/** @ignore */\n\nexport const isArrayLike = x => {\n  return isObject(x) && isNumber(x['length']);\n};\n/** @ignore */\n\nexport const isIteratorResult = x => {\n  return isObject(x) && 'done' in x && 'value' in x;\n};\n/** @ignore */\n\nexport const isUnderlyingSink = x => {\n  return isObject(x) && isFunction(x['abort']) && isFunction(x['close']) && isFunction(x['start']) && isFunction(x['write']);\n};\n/** @ignore */\n\nexport const isFileHandle = x => {\n  return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n/** @ignore */\n\nexport const isFSReadStream = x => {\n  return isReadableNodeStream(x) && isNumber(x['bytesRead']);\n};\n/** @ignore */\n\nexport const isFetchResponse = x => {\n  return isObject(x) && isReadableDOMStream(x['body']);\n};\n/** @ignore */\n\nexport const isWritableDOMStream = x => {\n  return isObject(x) && isFunction(x['abort']) && isFunction(x['getWriter']) && !(x instanceof ReadableInterop);\n};\n/** @ignore */\n\nexport const isReadableDOMStream = x => {\n  return isObject(x) && isFunction(x['cancel']) && isFunction(x['getReader']) && !(x instanceof ReadableInterop);\n};\n/** @ignore */\n\nexport const isWritableNodeStream = x => {\n  return isObject(x) && isFunction(x['end']) && isFunction(x['write']) && isBoolean(x['writable']) && !(x instanceof ReadableInterop);\n};\n/** @ignore */\n\nexport const isReadableNodeStream = x => {\n  return isObject(x) && isFunction(x['read']) && isFunction(x['pipe']) && isBoolean(x['readable']) && !(x instanceof ReadableInterop);\n};","map":{"version":3,"mappings":"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","names":["ReadableInterop","BigIntCtor","BigIntAvailable","BigIntUnavailableError","Error","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BigInt64ArrayUnavailable","BYTES_PER_ELEMENT","of","from","constructor","BigInt64Array","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64ArrayUnavailable","BigUint64Array","isNumber","x","isBoolean","isFunction","isObject","Object","isPromise","then","isObservable","subscribe","isIterable","Symbol","iterator","isAsyncIterable","asyncIterator","isArrowJSON","isArrayLike","isIteratorResult","isUnderlyingSink","isFileHandle","isFSReadStream","isReadableNodeStream","isFetchResponse","isReadableDOMStream","isWritableDOMStream","isWritableNodeStream"],"sources":["util/compat.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n"]},"metadata":{},"sourceType":"module"}