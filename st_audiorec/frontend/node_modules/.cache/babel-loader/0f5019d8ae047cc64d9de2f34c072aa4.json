{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n/** @ignore */\n\nexport class GetBuilderCtor extends Visitor {\n  visitNull() {\n    return NullBuilder;\n  }\n\n  visitBool() {\n    return BoolBuilder;\n  }\n\n  visitInt() {\n    return IntBuilder;\n  }\n\n  visitInt8() {\n    return Int8Builder;\n  }\n\n  visitInt16() {\n    return Int16Builder;\n  }\n\n  visitInt32() {\n    return Int32Builder;\n  }\n\n  visitInt64() {\n    return Int64Builder;\n  }\n\n  visitUint8() {\n    return Uint8Builder;\n  }\n\n  visitUint16() {\n    return Uint16Builder;\n  }\n\n  visitUint32() {\n    return Uint32Builder;\n  }\n\n  visitUint64() {\n    return Uint64Builder;\n  }\n\n  visitFloat() {\n    return FloatBuilder;\n  }\n\n  visitFloat16() {\n    return Float16Builder;\n  }\n\n  visitFloat32() {\n    return Float32Builder;\n  }\n\n  visitFloat64() {\n    return Float64Builder;\n  }\n\n  visitUtf8() {\n    return Utf8Builder;\n  }\n\n  visitBinary() {\n    return BinaryBuilder;\n  }\n\n  visitFixedSizeBinary() {\n    return FixedSizeBinaryBuilder;\n  }\n\n  visitDate() {\n    return DateBuilder;\n  }\n\n  visitDateDay() {\n    return DateDayBuilder;\n  }\n\n  visitDateMillisecond() {\n    return DateMillisecondBuilder;\n  }\n\n  visitTimestamp() {\n    return TimestampBuilder;\n  }\n\n  visitTimestampSecond() {\n    return TimestampSecondBuilder;\n  }\n\n  visitTimestampMillisecond() {\n    return TimestampMillisecondBuilder;\n  }\n\n  visitTimestampMicrosecond() {\n    return TimestampMicrosecondBuilder;\n  }\n\n  visitTimestampNanosecond() {\n    return TimestampNanosecondBuilder;\n  }\n\n  visitTime() {\n    return TimeBuilder;\n  }\n\n  visitTimeSecond() {\n    return TimeSecondBuilder;\n  }\n\n  visitTimeMillisecond() {\n    return TimeMillisecondBuilder;\n  }\n\n  visitTimeMicrosecond() {\n    return TimeMicrosecondBuilder;\n  }\n\n  visitTimeNanosecond() {\n    return TimeNanosecondBuilder;\n  }\n\n  visitDecimal() {\n    return DecimalBuilder;\n  }\n\n  visitList() {\n    return ListBuilder;\n  }\n\n  visitStruct() {\n    return StructBuilder;\n  }\n\n  visitUnion() {\n    return UnionBuilder;\n  }\n\n  visitDenseUnion() {\n    return DenseUnionBuilder;\n  }\n\n  visitSparseUnion() {\n    return SparseUnionBuilder;\n  }\n\n  visitDictionary() {\n    return DictionaryBuilder;\n  }\n\n  visitInterval() {\n    return IntervalBuilder;\n  }\n\n  visitIntervalDayTime() {\n    return IntervalDayTimeBuilder;\n  }\n\n  visitIntervalYearMonth() {\n    return IntervalYearMonthBuilder;\n  }\n\n  visitFixedSizeList() {\n    return FixedSizeListBuilder;\n  }\n\n  visitMap() {\n    return MapBuilder;\n  }\n\n}\n/** @ignore */\n\nexport const instance = new GetBuilderCtor();","map":{"version":3,"mappings":"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","names":["Visitor","BinaryBuilder","BoolBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","FixedSizeBinaryBuilder","FixedSizeListBuilder","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","ListBuilder","MapBuilder","NullBuilder","StructBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","UnionBuilder","DenseUnionBuilder","SparseUnionBuilder","Utf8Builder","GetBuilderCtor","visitNull","visitBool","visitInt","visitInt8","visitInt16","visitInt32","visitInt64","visitUint8","visitUint16","visitUint32","visitUint64","visitFloat","visitFloat16","visitFloat32","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","visitDateDay","visitDateMillisecond","visitTimestamp","visitTimestampSecond","visitTimestampMillisecond","visitTimestampMicrosecond","visitTimestampNanosecond","visitTime","visitTimeSecond","visitTimeMillisecond","visitTimeMicrosecond","visitTimeNanosecond","visitDecimal","visitList","visitStruct","visitUnion","visitDenseUnion","visitSparseUnion","visitDictionary","visitInterval","visitIntervalDayTime","visitIntervalYearMonth","visitFixedSizeList","visitMap","instance"],"sources":["visitor/builderctor.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n"]},"metadata":{},"sourceType":"module"}